#!/usr/env/bin bash

THIS_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
SCRIPTS_DIR="${THIS_SCRIPT_DIR}"
SERVER_DIR="${SCRIPTS_DIR}/../.."
source "${SCRIPTS_DIR}/common" # Add the functions in 'common'

# EXPECTED PARAMS :
# 1 : Name of the dependency.
# 2 : Directory where the build files are.
# 3 : Name of the target to call to clean.
cleanProject() {
    local DEPENDENCY_NAME="${1}"
    local DEPENDENCY_DIR="${2}"
    local CLEAN_TARGET="${3}"
    message $'\nCleaning ${DEPENDENCY_NAME}...'

    cd "${DEPENDENCY_NAME}" && make "${CLEAN_TARGET}" && cd .. && rm -rf "${DEPENDENCY_NAME}"

    RETURN_CODE=$?
    if [ "${RETURN_CODE}" != 0 ]; then
        messageError $'An error occurred during cleaning.\n'
        false
    else
        message $'Done.\n'
    fi
}

# EXPECTED PARAMS :
# 1 : Name of the dependency.
# 2 : Directory where the build files are.
cleanCMakeProject() {
    cleanProject "${1}" "${2}" clean
}

# EXPECTED PARAMS :
# 1 : Name of the dependency.
# 2 : Directory where the Makefile is.
cleanConfigureProject() {
    cleanProject "${1}" "${2}" distclean
}

cleanPistache() {
    local NAME="pistache"
    local BINARY_DIR="${DEPS_DIR}/pistache/build"
    cleanCMakeProject "${NAME}" "${BINARY_DIR}"
}

cleanOpenSsl() {
    local NAME="openssl"
    local MAKEFILE_DIR="${DEPS_DIR}/openssl"
    cleanConfigureProject "${NAME}" "${MAKEFILE_DIR}"
}

cleanTagLib() {
    local NAME="taglib"
    local BINARY_DIR="${DEPS_DIR}/taglib/build"
    cleanCMakeProject "${NAME}" "${BINARY_DIR}"
}

cleanZLib() {
    local NAME="zlib"
    local BINARY_DIR="${DEPS_DIR}/zlib/build"
    cleanCMakeProject "${NAME}" "${BINARY_DIR}"
}

cleanSqlite3() {
    local NAME="sqlite3"
    local MAKEFILE_DIR="${DEPS_DIR}/sqlite3"
    cleanConfigureProject "${NAME}" "${MAKEFILE_DIR}"
}

cleanLibmad() {
    local NAME="openssl"
    local MAKEFILE_DIR="${DEPS_DIR}/libmad"
    cleanConfigureProject "${NAME}" "${MAKEFILE_DIR}"
}

cleanServer() {
    local NAME="the elevation server"
    local BINARY_DIR="${SERVER_DIR}/build"
    cleanCMakeProject "${NAME}" "${BINARY_DIR}"
}

cleanDependencies() {
    cleanPistache
    cleanOpenSsl
    cleanTagLib
    cleanZLib
    cleanSqlite3
    cleanLibmad
}

clean() {
    local DEPS_DIR="${SERVER_DIR}/lib"
    cleanServer
    cleanDependencies
}
